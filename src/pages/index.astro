---
import { Image } from 'astro:assets'
import { getCollection } from 'astro:content'
import { Icon } from 'astro-icon/components'
import DiscordHonoImage from '../assets/discordhono.png'
import LuisFunImage from '../assets/luisfun.png'
import PaimonPlusImage from '../assets/paimon.png'
import Layout from '../components/layout.astro'
import NewTab from '../components/new-tab.astro'
import Time from '../components/time.astro'

const posts = (await getCollection('post')).sort((a, b) => b.data.created.valueOf() - a.data.created.valueOf())
if (posts.length > 30) posts.length = 30

const works = [
  {
    title: 'luis.fun',
    description: '作ったものまとめ',
    url: 'https://luis.fun',
    image: LuisFunImage,
  },
  {
    title: 'Discord Hono',
    description: 'Botを作るライブラリ',
    url: 'https://discord-hono.luis.fun/ja/',
    image: DiscordHonoImage,
  },
  {
    title: 'Paimon+',
    description: '原神webツール',
    url: 'https://paimon.plus/ja/',
    image: PaimonPlusImage,
  },
]
---

<Layout>
	<div data-pagefind-ignore>
		<h1>るいすの備忘録</h1>
		<h2>作ったもの</h2>
		<div class="cards">
			{
				works.map((work) => (
					<NewTab class="card flex" href={work.url}>
						<div class="card-image flex justify-center">
							<Image src={work.image} alt={work.title} class="card-icon work-icon" />
						</div>
						<div>
							<div class="card-title">{work.title}</div>
							<div class="card-text">{work.description}</div>
						</div>
					</NewTab>
				))
			}
		</div>
		<h2>書き物</h2>
		<div class="cards">
			{
				posts.map((post) => (
					<a class="card flex" href={`/${post.id}/`}>
						<div class="card-image flex justify-center">
							<Icon name={post.data.emoji} class="card-icon" />
						</div>
						<div>
							<div class="card-title">{post.data.title}</div>
							<div class="card-text">
								<Time date={post.data.updated || post.data.created} icon={post.data.updated ? "mdi:update" : undefined} />
							</div>
						</div>
					</a>
				))
			}
		</div>
	</div>
</Layout>

<style>
	.cards {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(20rem, 1fr));
    gap: 2rem;
    justify-content: center;
	}
	.card {
		gap: 1rem;
		text-decoration: none;
	}
	.card:hover .card-title {
		text-decoration: underline;
	}
	.card-image {
		flex-shrink: 0;
		width: 5.25rem;
		aspect-ratio: 1;
		background: var(--bg-2);
		border-radius: 1rem;
	}
	.work-icon {
		border-radius: 30.9017%;
	}
	.card-icon {
		width: 2.75rem;
		height: auto;
	}
	.card-title {
		font-size: 1.25rem;
		font-weight: bold;
		color: var(--text-1);
	}
	.card-text {
		color: var(--text-2);
	}
</style>
